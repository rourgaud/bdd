<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Mots', 'doctrine');

/**
 * BaseMots
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $mot
 * @property Doctrine_Collection $MotsCandidat
 * @property Doctrine_Collection $MotsFormation
 * @property Doctrine_Collection $MotsParcour
 * 
 * @method string              getMot()           Returns the current record's "mot" value
 * @method Doctrine_Collection getMotsCandidat()  Returns the current record's "MotsCandidat" collection
 * @method Doctrine_Collection getMotsFormation() Returns the current record's "MotsFormation" collection
 * @method Doctrine_Collection getMotsParcour()   Returns the current record's "MotsParcour" collection
 * @method Mots                setMot()           Sets the current record's "mot" value
 * @method Mots                setMotsCandidat()  Sets the current record's "MotsCandidat" collection
 * @method Mots                setMotsFormation() Sets the current record's "MotsFormation" collection
 * @method Mots                setMotsParcour()   Sets the current record's "MotsParcour" collection
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMots extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('mots');
        $this->hasColumn('mot', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('MotsCandidat', array(
             'local' => 'mot',
             'foreign' => 'mot'));

        $this->hasMany('MotsFormation', array(
             'local' => 'mot',
             'foreign' => 'mot'));

        $this->hasMany('MotsParcour', array(
             'local' => 'mot',
             'foreign' => 'mot'));
    }
}