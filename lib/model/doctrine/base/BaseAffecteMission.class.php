<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('AffecteMission', 'doctrine');

/**
 * BaseAffecteMission
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $mission_id
 * @property integer $utilisateur_id
 * @property Mission $Mission
 * @property Utilisateur $Utilisateur
 * 
 * @method integer        getMissionId()      Returns the current record's "mission_id" value
 * @method integer        getUtilisateurId()  Returns the current record's "utilisateur_id" value
 * @method Mission        getMission()        Returns the current record's "Mission" value
 * @method Utilisateur    getUtilisateur()    Returns the current record's "Utilisateur" value
 * @method AffecteMission setMissionId()      Sets the current record's "mission_id" value
 * @method AffecteMission setUtilisateurId()  Sets the current record's "utilisateur_id" value
 * @method AffecteMission setMission()        Sets the current record's "Mission" value
 * @method AffecteMission setUtilisateur()    Sets the current record's "Utilisateur" value
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAffecteMission extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('affecte_mission');
        $this->hasColumn('mission_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('utilisateur_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Mission', array(
             'local' => 'mission_id',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur', array(
             'local' => 'utilisateur_id',
             'foreign' => 'id'));
    }
}