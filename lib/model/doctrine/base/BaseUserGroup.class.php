<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('UserGroup', 'doctrine');

/**
 * BaseUserGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $utilisateur_id
 * @property integer $groupe_id
 * @property Utilisateur $Utilisateur
 * @property Groupe $Groupe
 * 
 * @method integer     getUtilisateurId()  Returns the current record's "utilisateur_id" value
 * @method integer     getGroupeId()       Returns the current record's "groupe_id" value
 * @method Utilisateur getUtilisateur()    Returns the current record's "Utilisateur" value
 * @method Groupe      getGroupe()         Returns the current record's "Groupe" value
 * @method UserGroup   setUtilisateurId()  Sets the current record's "utilisateur_id" value
 * @method UserGroup   setGroupeId()       Sets the current record's "groupe_id" value
 * @method UserGroup   setUtilisateur()    Sets the current record's "Utilisateur" value
 * @method UserGroup   setGroupe()         Sets the current record's "Groupe" value
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUserGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('user_group');
        $this->hasColumn('utilisateur_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('groupe_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur', array(
             'local' => 'utilisateur_id',
             'foreign' => 'id'));

        $this->hasOne('Groupe', array(
             'local' => 'groupe_id',
             'foreign' => 'id'));
    }
}