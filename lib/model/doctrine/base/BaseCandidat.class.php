<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Candidat', 'doctrine');

/**
 * BaseCandidat
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $civilite_id
 * @property string $nom
 * @property string $prenom
 * @property string $tellignedirecte
 * @property string $telstandard
 * @property string $telmobilepro
 * @property string $telmobileperso
 * @property string $teldomicile
 * @property string $email
 * @property date $datenaissance
 * @property date $dateexperience
 * @property string $commentaire
 * @property string $commentairechargerecherche
 * @property string $competencesinformatiques
 * @property string $cv
 * @property string $dossier
 * @property string $source
 * @property integer $place
 * @property integer $valid
 * @property Doctrine_Collection $CritereLibreCandidat
 * @property Doctrine_Collection $Formation
 * @property Doctrine_Collection $LangueCandidat
 * @property Doctrine_Collection $MotsCandidat
 * @property Doctrine_Collection $Parcour
 * @property Doctrine_Collection $TableauChasse
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method integer             getCiviliteId()                 Returns the current record's "civilite_id" value
 * @method string              getNom()                        Returns the current record's "nom" value
 * @method string              getPrenom()                     Returns the current record's "prenom" value
 * @method string              getTellignedirecte()            Returns the current record's "tellignedirecte" value
 * @method string              getTelstandard()                Returns the current record's "telstandard" value
 * @method string              getTelmobilepro()               Returns the current record's "telmobilepro" value
 * @method string              getTelmobileperso()             Returns the current record's "telmobileperso" value
 * @method string              getTeldomicile()                Returns the current record's "teldomicile" value
 * @method string              getEmail()                      Returns the current record's "email" value
 * @method date                getDatenaissance()              Returns the current record's "datenaissance" value
 * @method date                getDateexperience()             Returns the current record's "dateexperience" value
 * @method string              getCommentaire()                Returns the current record's "commentaire" value
 * @method string              getCommentairechargerecherche() Returns the current record's "commentairechargerecherche" value
 * @method string              getCompetencesinformatiques()   Returns the current record's "competencesinformatiques" value
 * @method string              getCv()                         Returns the current record's "cv" value
 * @method string              getDossier()                    Returns the current record's "dossier" value
 * @method string              getSource()                     Returns the current record's "source" value
 * @method integer             getPlace()                      Returns the current record's "place" value
 * @method integer             getValid()                      Returns the current record's "valid" value
 * @method Doctrine_Collection getCritereLibreCandidat()       Returns the current record's "CritereLibreCandidat" collection
 * @method Doctrine_Collection getFormation()                  Returns the current record's "Formation" collection
 * @method Doctrine_Collection getLangueCandidat()             Returns the current record's "LangueCandidat" collection
 * @method Doctrine_Collection getMotsCandidat()               Returns the current record's "MotsCandidat" collection
 * @method Doctrine_Collection getParcour()                    Returns the current record's "Parcour" collection
 * @method Doctrine_Collection getTableauChasse()              Returns the current record's "TableauChasse" collection
 * @method Candidat            setId()                         Sets the current record's "id" value
 * @method Candidat            setCiviliteId()                 Sets the current record's "civilite_id" value
 * @method Candidat            setNom()                        Sets the current record's "nom" value
 * @method Candidat            setPrenom()                     Sets the current record's "prenom" value
 * @method Candidat            setTellignedirecte()            Sets the current record's "tellignedirecte" value
 * @method Candidat            setTelstandard()                Sets the current record's "telstandard" value
 * @method Candidat            setTelmobilepro()               Sets the current record's "telmobilepro" value
 * @method Candidat            setTelmobileperso()             Sets the current record's "telmobileperso" value
 * @method Candidat            setTeldomicile()                Sets the current record's "teldomicile" value
 * @method Candidat            setEmail()                      Sets the current record's "email" value
 * @method Candidat            setDatenaissance()              Sets the current record's "datenaissance" value
 * @method Candidat            setDateexperience()             Sets the current record's "dateexperience" value
 * @method Candidat            setCommentaire()                Sets the current record's "commentaire" value
 * @method Candidat            setCommentairechargerecherche() Sets the current record's "commentairechargerecherche" value
 * @method Candidat            setCompetencesinformatiques()   Sets the current record's "competencesinformatiques" value
 * @method Candidat            setCv()                         Sets the current record's "cv" value
 * @method Candidat            setDossier()                    Sets the current record's "dossier" value
 * @method Candidat            setSource()                     Sets the current record's "source" value
 * @method Candidat            setPlace()                      Sets the current record's "place" value
 * @method Candidat            setValid()                      Sets the current record's "valid" value
 * @method Candidat            setCritereLibreCandidat()       Sets the current record's "CritereLibreCandidat" collection
 * @method Candidat            setFormation()                  Sets the current record's "Formation" collection
 * @method Candidat            setLangueCandidat()             Sets the current record's "LangueCandidat" collection
 * @method Candidat            setMotsCandidat()               Sets the current record's "MotsCandidat" collection
 * @method Candidat            setParcour()                    Sets the current record's "Parcour" collection
 * @method Candidat            setTableauChasse()              Sets the current record's "TableauChasse" collection
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCandidat extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('candidat');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('civilite_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('tellignedirecte', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('telstandard', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('telmobilepro', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('telmobileperso', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('teldomicile', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('email', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('datenaissance', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('dateexperience', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('commentaire', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('commentairechargerecherche', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('competencesinformatiques', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('cv', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('dossier', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('source', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('place', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('valid', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '1',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('CritereLibreCandidat', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));

        $this->hasMany('Formation', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));

        $this->hasMany('LangueCandidat', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));

        $this->hasMany('MotsCandidat', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));

        $this->hasMany('Parcour', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));

        $this->hasMany('TableauChasse', array(
             'local' => 'id',
             'foreign' => 'candidat_id'));
    }
}