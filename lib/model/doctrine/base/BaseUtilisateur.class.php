<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Utilisateur', 'doctrine');

/**
 * BaseUtilisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $nom
 * @property string $prenom
 * @property date $createdat
 * @property Doctrine_Collection $AffecteMission
 * @property Doctrine_Collection $Tache
 * @property Doctrine_Collection $Tache_2
 * @property Doctrine_Collection $UserGroup
 * @property Doctrine_Collection $PlaquetteMetiers
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getUsername()         Returns the current record's "username" value
 * @method string              getPassword()         Returns the current record's "password" value
 * @method string              getNom()              Returns the current record's "nom" value
 * @method string              getPrenom()           Returns the current record's "prenom" value
 * @method date                getCreatedat()        Returns the current record's "createdat" value
 * @method Doctrine_Collection getAffecteMission()   Returns the current record's "AffecteMission" collection
 * @method Doctrine_Collection getTache()            Returns the current record's "Tache" collection
 * @method Doctrine_Collection getTache2()           Returns the current record's "Tache_2" collection
 * @method Doctrine_Collection getUserGroup()        Returns the current record's "UserGroup" collection
 * @method Doctrine_Collection getPlaquetteMetiers() Returns the current record's "PlaquetteMetiers" collection
 * @method Utilisateur         setId()               Sets the current record's "id" value
 * @method Utilisateur         setUsername()         Sets the current record's "username" value
 * @method Utilisateur         setPassword()         Sets the current record's "password" value
 * @method Utilisateur         setNom()              Sets the current record's "nom" value
 * @method Utilisateur         setPrenom()           Sets the current record's "prenom" value
 * @method Utilisateur         setCreatedat()        Sets the current record's "createdat" value
 * @method Utilisateur         setAffecteMission()   Sets the current record's "AffecteMission" collection
 * @method Utilisateur         setTache()            Sets the current record's "Tache" collection
 * @method Utilisateur         setTache2()           Sets the current record's "Tache_2" collection
 * @method Utilisateur         setUserGroup()        Sets the current record's "UserGroup" collection
 * @method Utilisateur         setPlaquetteMetiers() Sets the current record's "PlaquetteMetiers" collection
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtilisateur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utilisateur');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('username', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('password', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('createdat', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('AffecteMission', array(
             'local' => 'id',
             'foreign' => 'utilisateur_id'));

        $this->hasMany('Tache', array(
             'local' => 'id',
             'foreign' => 'affecte_a_id'));

        $this->hasMany('Tache as Tache_2', array(
             'local' => 'id',
             'foreign' => 'affecte_par_id'));

        $this->hasMany('UserGroup', array(
             'local' => 'id',
             'foreign' => 'utilisateur_id'));

        $this->hasMany('PlaquetteMetier as PlaquetteMetiers', array(
             'local' => 'id',
             'foreign' => 'utilisateur_id'));
    }
}