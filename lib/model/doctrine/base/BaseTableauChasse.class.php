<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('TableauChasse', 'doctrine');

/**
 * BaseTableauChasse
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $mission_id
 * @property integer $candidat_id
 * @property string $contactepar
 * @property date $contactele
 * @property string $commentairecontact
 * @property string $rencontrepar
 * @property date $rencontrele
 * @property string $commentairerencontre
 * @property string $commentaire
 * @property string $criteres_specifiques
 * @property integer $ctrl_statut_id
 * @property integer $shortliste
 * @property string $coutextesociete
 * @property string $coufondsociete
 * @property string $coutextecandidat
 * @property string $coufondcandidat
 * @property Mission $Mission
 * @property Candidat $Candidat
 * 
 * @method integer       getMissionId()            Returns the current record's "mission_id" value
 * @method integer       getCandidatId()           Returns the current record's "candidat_id" value
 * @method string        getContactepar()          Returns the current record's "contactepar" value
 * @method date          getContactele()           Returns the current record's "contactele" value
 * @method string        getCommentairecontact()   Returns the current record's "commentairecontact" value
 * @method string        getRencontrepar()         Returns the current record's "rencontrepar" value
 * @method date          getRencontrele()          Returns the current record's "rencontrele" value
 * @method string        getCommentairerencontre() Returns the current record's "commentairerencontre" value
 * @method string        getCommentaire()          Returns the current record's "commentaire" value
 * @method string        getCriteresSpecifiques()  Returns the current record's "criteres_specifiques" value
 * @method integer       getCtrlStatutId()         Returns the current record's "ctrl_statut_id" value
 * @method integer       getShortliste()           Returns the current record's "shortliste" value
 * @method string        getCoutextesociete()      Returns the current record's "coutextesociete" value
 * @method string        getCoufondsociete()       Returns the current record's "coufondsociete" value
 * @method string        getCoutextecandidat()     Returns the current record's "coutextecandidat" value
 * @method string        getCoufondcandidat()      Returns the current record's "coufondcandidat" value
 * @method Mission       getMission()              Returns the current record's "Mission" value
 * @method Candidat      getCandidat()             Returns the current record's "Candidat" value
 * @method TableauChasse setMissionId()            Sets the current record's "mission_id" value
 * @method TableauChasse setCandidatId()           Sets the current record's "candidat_id" value
 * @method TableauChasse setContactepar()          Sets the current record's "contactepar" value
 * @method TableauChasse setContactele()           Sets the current record's "contactele" value
 * @method TableauChasse setCommentairecontact()   Sets the current record's "commentairecontact" value
 * @method TableauChasse setRencontrepar()         Sets the current record's "rencontrepar" value
 * @method TableauChasse setRencontrele()          Sets the current record's "rencontrele" value
 * @method TableauChasse setCommentairerencontre() Sets the current record's "commentairerencontre" value
 * @method TableauChasse setCommentaire()          Sets the current record's "commentaire" value
 * @method TableauChasse setCriteresSpecifiques()  Sets the current record's "criteres_specifiques" value
 * @method TableauChasse setCtrlStatutId()         Sets the current record's "ctrl_statut_id" value
 * @method TableauChasse setShortliste()           Sets the current record's "shortliste" value
 * @method TableauChasse setCoutextesociete()      Sets the current record's "coutextesociete" value
 * @method TableauChasse setCoufondsociete()       Sets the current record's "coufondsociete" value
 * @method TableauChasse setCoutextecandidat()     Sets the current record's "coutextecandidat" value
 * @method TableauChasse setCoufondcandidat()      Sets the current record's "coufondcandidat" value
 * @method TableauChasse setMission()              Sets the current record's "Mission" value
 * @method TableauChasse setCandidat()             Sets the current record's "Candidat" value
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTableauChasse extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tableau_chasse');
        $this->hasColumn('mission_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('candidat_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('contactepar', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('contactele', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('commentairecontact', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('rencontrepar', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('rencontrele', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '0000-00-00',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 25,
             ));
        $this->hasColumn('commentairerencontre', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('commentaire', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('criteres_specifiques', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => '',
             ));
        $this->hasColumn('ctrl_statut_id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('shortliste', 'integer', 1, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('coutextesociete', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('coufondsociete', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'ffffff',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('coutextecandidat', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => '000000',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('coufondcandidat', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'default' => 'ffffff',
             'notnull' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Mission', array(
             'local' => 'mission_id',
             'foreign' => 'id'));

        $this->hasOne('Candidat', array(
             'local' => 'candidat_id',
             'foreign' => 'id'));
    }
}