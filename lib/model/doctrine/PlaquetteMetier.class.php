<?php

/**
 * PlaquetteMetier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    opsearch-app
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class PlaquetteMetier extends BasePlaquetteMetier
{
	/*
	*
	*	initData()
	*	Préparation des données en vu de leur exploitation /!\ ne doit pas sauvegarder
	*
	*/
	public function initData() {
		$intitulePosts = explode(';', $this->getIntitulePost());

                //récupération des données de la base
		$missions           = Doctrine::getTable('Mission')->getMissionsByIntitulepostes($intitulePosts);
		$candidats          = Doctrine::getTable('TableauChasse')->getcandidatsByMissions($missions);
                $candidatParcours   = Doctrine::getTable('Parcour')->getByCandidats($candidats);
                $candidatFormations = Doctrine::getTable('Formation')->getByCandidats($candidats);
                $candidats          = Doctrine::getTable('Candidat')->getByIds($candidats);

                //nb de candidats
                $this->setNbCandidat(count($candidats));

                //parcours
                $totalrem = 0;
                $remmax = 0;
                $remmaxid = 0;
                $remmin = 999;
                $remminid = 0;
                $nb = 0;
                $secteurs = array();
                foreach($candidatParcours as $candidatParcour) {
                    //rem moyenne
                    if($candidatParcour['remuneration'] > 0) {
                        $totalrem += $candidatParcour['remuneration'];
                        $nb++;
                    }
                    //rem max
                    if($candidatParcour['remuneration'] > $remmax) {
                        $remmax = $candidatParcour['remuneration'];
                        $remmaxid = $candidatParcour['candidat_id'];
                    }
                    //rem min
                    if($candidatParcour['remuneration'] > 0 && $candidatParcour['remuneration'] < $remmin) {
                        $remmin = $candidatParcour['remuneration'];
                        $remminid = $candidatParcour['candidat_id'];
                    }
                    //secteur
                    $secteur = explode(', ', $candidatParcour['secteur']);
                    foreach($secteur as $s) {
                        if($s != '') {
                            if(array_key_exists($s, $secteurs)) {
                                $secteurs[$s] = $secteurs[$s] + 1;
                            } else {
                                $secteurs[$s] = 1;
                            }
                        }
                    }
                }
                $secteur_google_chart_url = 'http://chart.apis.google.com/chart?';
                $secteur_google_chart_url_cht = 'cht=p';
                $secteur_google_chart_url_chs = 'chs=400x200';
                $secteur_google_chart_url_chd = 'chd=t:';
                $secteur_google_chart_url_chl = 'chl=';
                foreach($secteurs as $s => $v) {
                    $secteur_google_chart_url_chd .= $v.',';
                    $secteur_google_chart_url_chl .= $s.'|';
                }
                $secteur_google_chart_url .=
                    $secteur_google_chart_url_cht .'&'.
                    $secteur_google_chart_url_chs .'&'.
                    substr($secteur_google_chart_url_chd, 0, -1) .'&'.
                    substr($secteur_google_chart_url_chl, 0, -1)
                ;

                //formation
//                $ecoles = array();
                $niveauFormations = array();
                foreach($candidatFormations as $candidatFormation) {
//                    if($candidatFormation['ecole'] != '') {
//                        if(array_key_exists($candidatFormation['ecole'], $ecoles)) {
//                            $ecoles[$candidatFormation['ecole']] = $ecoles[$candidatFormation['ecole']] + 1;
//                        } else {
//                            $ecoles[$candidatFormation['ecole']] = 1;
//                        }
//                    }
                    if($candidatFormation['niveauformation'] != '') {
                        if(array_key_exists($candidatFormation['niveauformation'], $niveauFormations)) {
                            $niveauFormations[$candidatFormation['niveauformation']] = $niveauFormations[$candidatFormation['niveauformation']] + 1;
                        } else {
                            $niveauFormations[$candidatFormation['niveauformation']] = 1;
                        }
                    }
                }
                $niveauformation_google_chart_url = 'http://chart.apis.google.com/chart?';
                $niveauformation_google_chart_url_cht = 'cht=p';
                $niveauformation_google_chart_url_chs = 'chs=400x200';
                $niveauformation_google_chart_url_chd = 'chd=t:';
                $niveauformation_google_chart_url_chl = 'chl=';
//                foreach($ecoles as $n => $v) {
                foreach($niveauFormations as $n => $v) {
                    $niveauformation_google_chart_url_chd .= $v.',';
                    $niveauformation_google_chart_url_chl .= $n.'|';
                }
                $niveauformation_google_chart_url .=
                    $niveauformation_google_chart_url_cht .'&'.
                    $niveauformation_google_chart_url_chs .'&'.
                    substr($niveauformation_google_chart_url_chd, 0, -1) .'&'.
                    substr($niveauformation_google_chart_url_chl, 0, -1)
                ;

                //candidat
                $totalage = 0;
                $nbage = 0;
                $agemax = 0;
                $agemin = 999;
                foreach($candidats as $candidat) {
                    $age = UtilDate::age($candidat['datenaissance']);
                    //age moyen
                    if($age != 'n/a') {
                        $totalage += $age;
                        $nbage ++;
                    }
                    //age max
                    if($age != 'n/a' && $age > $agemax) {
                        $agemax = $age;
                    }
                    //age min
                    if($age != 'n/a' && $age < $agemin) {
                        $agemin = $age;
                    }
                }

                //affectation des valeurs
                $this->setRemMoy(round($totalrem / $nb, 0));
                $this->setRemMax($remmax);
                $this->setRemMin($remmin);
                $this->setAgeMoy(round($totalage / $nbage, 0));
                $this->setAgeMax($agemax);
                $this->setAgeMin($agemin);
                $this->setIdCandMax($remmaxid);
                $this->setIdCandMin($remminid);
                $this->setSecteurPourcent($secteur_google_chart_url);
                $this->setFormationPourcent($niveauformation_google_chart_url);

                //return $candidatMax;
	}
}
